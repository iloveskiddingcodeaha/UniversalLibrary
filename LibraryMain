local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v83=0;while true do if (v83==0) then v19=v0(v3(v30,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v30,16));if v19 then local v101=v5(v85,v19);v19=nil;return v101;else return v85;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v86=0;local v87;while true do if (v86==((1637 -(1523 + 114)) -0)) then v87=(v31/((5 -3)^(v32-(1 -0))))%(2^(((v33-1) -(v32-(2 -1))) + (620 -(555 + 58 + 6)))) ;return v87-(v87%(932 -(857 + 74))) ;end end else local v88=(570 -(367 + (1078 -(282 + 595))))^(v32-(928 -((304 -90) + 713))) ;return (((v31%(v88 + v88))>=v88) and (1 + (1065 -(68 + 997)))) or (0 + 0) ;end end local function v21() local v34=1270 -(222 + 4 + 232 + 812) ;local v35;while true do if (v34==1) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (118 -(32 + 85)) ;v34=1;end end end local function v22() local v36=(1137 -(67 + 113)) -(892 + 65) ;local v37;local v38;while true do if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + ((3 + 0) -1) );v18=v18 + (3 -1) ;v36=351 -((213 -126) + 263) ;end if (v36==1) then return (v38 * 256) + v37 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 4 ;return (v42 * (66680831 -49903615)) + (v41 * 65536) + (v40 * (1208 -(802 + 150))) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=2 -1 ;local v46=(v20(v44,1 -(0 -0) ,20) * ((2 + 0)^(1029 -(393 + 522 + 82)))) + v43 ;local v47=v20(v44,21,31);local v48=((v20(v44,90 -58 )==(1 + 0)) and  -1) or (1 -0) ;if (v47==(1187 -(1069 + (208 -90)))) then if (v46==(0 -0)) then return v48 * (0 -0) ;else local v93=0 + 0 ;while true do if (v93==(0 -0)) then v47=1 + 0 ;v45=791 -(368 + 423) ;break;end end end elseif (v47==2047) then return ((v46==(0 -0)) and (v48 * ((19 -(10 + (446 -(145 + 293))))/0))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((7 -5)^(494 -(416 + 26))))) ;end local function v25(v49) local v50;if  not v49 then local v89=430 -(44 + 386) ;while true do if (v89==(1486 -(998 + 488))) then v49=v23();if (v49==((1138 -(116 + 1022)) + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -((4 -3) + 0) );v18=v18 + v49 ;local v51={};for v66=773 -(201 + 571) , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v68=(function() return 0 + 0 ;end)();while true do if ((0 + 0)~=v68) then else if (v52~=(1 + 1)) then else v57[ #"91("]=(function() return v21();end)();for v102= #"~",v23() do local v103=(function() return v21();end)();if (v20(v103, #"{", #"~")==0) then local v110=(function() return 202 -(14 + 188) ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v110==(677 -(534 + 141))) then while true do if (v111~= #",") then else local v194=(function() return 0 + 0 ;end)();while true do if ((0 + 0)~=v194) then else v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==(0 -0)) then local v408=(function() return 0;end)();while true do if (v408==(0 -0)) then v114[ #"91("]=(function() return v22();end)();v114[ #"asd1"]=(function() return v22();end)();break;end end elseif (v112== #",") then v114[ #"-19"]=(function() return v23();end)();elseif (v112==(5 -3)) then v114[ #"xnx"]=(function() return v23() -((2 + 0)^(11 + 5)) ;end)();elseif (v112~= #"91(") then else local v462=(function() return 396 -(115 + 281) ;end)();local v463=(function() return;end)();while true do if (v462==(0 -0)) then v463=(function() return 0;end)();while true do if (v463==(0 + 0)) then v114[ #"asd"]=(function() return v23() -(2^16) ;end)();v114[ #"?id="]=(function() return v22();end)();break;end end break;end end end v194=(function() return 1;end)();end if (v194==1) then v111=(function() return 4 -2 ;end)();break;end end end if (0==v111) then local v195=(function() return 0;end)();local v196=(function() return;end)();while true do if (0==v195) then v196=(function() return 0 -0 ;end)();while true do if (v196~=(868 -(550 + 317))) then else v111=(function() return  #"~";end)();break;end if ((0 -0)==v196) then v112=(function() return v20(v103,2, #"asd");end)();v113=(function() return v20(v103, #"0313",8 -2 );end)();v196=(function() return 2 -1 ;end)();end end break;end end end if (v111~=2) then else local v197=(function() return 285 -(134 + 151) ;end)();local v198=(function() return;end)();while true do if (v197==0) then v198=(function() return 1665 -(970 + 695) ;end)();while true do if (v198==(0 -0)) then if (v20(v113, #".", #"~")~= #"!") then else v114[2]=(function() return v59[v114[1992 -(582 + 1408) ]];end)();end if (v20(v113,2,6 -4 )~= #">") then else v114[ #"-19"]=(function() return v59[v114[ #"asd"]];end)();end v198=(function() return 1;end)();end if (v198==(1 -0)) then v111=(function() return  #"91(";end)();break;end end break;end end end if (v111== #"xxx") then if (v20(v113, #"91(", #"19(")~= #"<") then else v114[ #"xnxx"]=(function() return v59[v114[ #"0313"]];end)();end v54[v102]=(function() return v114;end)();break;end end break;end if (v110==(3 -2)) then local v115=(function() return 1824 -(1195 + 629) ;end)();local v116=(function() return;end)();while true do if (v115~=0) then else v116=(function() return 0 -0 ;end)();while true do if (v116~=(241 -(187 + 54))) then else v113=(function() return nil;end)();v114=(function() return nil;end)();v116=(function() return 781 -(162 + 618) ;end)();end if (v116==1) then v110=(function() return 2 + 0 ;end)();break;end end break;end end end if (v110==0) then local v117=(function() return 0;end)();while true do if (v117~=(0 + 0)) then else v111=(function() return 0 -0 ;end)();v112=(function() return nil;end)();v117=(function() return 1 -0 ;end)();end if (1==v117) then v110=(function() return 1 + 0 ;end)();break;end end end end end end for v104= #"}",v23() do v55,v104,v28=(function() return v53(v55,v104,v28);end)();end return v57;end if (v52~=(1637 -(1373 + 263))) then else local v99=(function() return 0;end)();local v100=(function() return;end)();while true do if ((1000 -(451 + 549))==v99) then v100=(function() return 0 + 0 ;end)();while true do if (v100==(0 -0)) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v100=(function() return 1385 -(746 + 638) ;end)();end if (v100==1) then v59=(function() return {};end)();for v118= #"~",v58 do local v119=(function() return 0;end)();local v120=(function() return;end)();local v121=(function() return;end)();while true do if (v119~=(0 + 0)) then else local v213=(function() return 0 -0 ;end)();while true do if (v213~=1) then else v119=(function() return 342 -(218 + 123) ;end)();break;end if (v213~=0) then else v120=(function() return v21();end)();v121=(function() return nil;end)();v213=(function() return 1;end)();end end end if (v119~=1) then else if (v120== #"}") then v121=(function() return v21()~=0 ;end)();elseif (v120==(1583 -(1535 + 46))) then v121=(function() return v24();end)();elseif (v120== #"19(") then v121=(function() return v25();end)();end v59[v118]=(function() return v121;end)();break;end end end v100=(function() return 2 + 0 ;end)();end if ((1 + 1)==v100) then v52=(function() return 2;end)();break;end end break;end end end v68=(function() return 561 -(306 + 254) ;end)();end if (v68==1) then if (v52==0) then v53=(function() return function(v105,v106,v107) local v108=(function() return 0 + 0 ;end)();local v109=(function() return;end)();while true do if (v108==0) then v109=(function() return 0 -0 ;end)();while true do if (v109==(1467 -(899 + 568))) then local v122=(function() return 0;end)();while true do if (0==v122) then local v329=(function() return 0;end)();while true do if (0==v329) then v105[v106-#"\\" ]=(function() return v107();end)();return v105,v106,v107;end end end end end end break;end end end;end)();v54=(function() return {};end)();v55=(function() return {};end)();v56=(function() return {};end)();v52=(function() return 1 + 0 ;end)();end break;end end end end local function v29(v60,v61,v62) local v63=v60[2 -1 ];local v64=v60[2];local v65=v60[606 -(268 + 335) ];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=291 -(60 + 230) ;local v74= -(573 -(426 + 146));local v75={};local v76={...};local v77=v12("#",...) -(1457 -(282 + 1174)) ;local v78={};local v79={};for v90=811 -(569 + 242) ,v77 do if ((v90>=v71) or (2602>3878)) then v75[v90-v71 ]=v76[v90 + (2 -1) ];else v79[v90]=v76[v90 + (1270 -(231 + 1038)) ];end end local v80=(v77-v71) + 1 + 0 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1025 -(706 + 265 + 53) ];if (v82<=((2457 -(171 + 991)) -(721 + 530))) then if ((v82<=(1292 -(945 + 326))) or (2981>4339)) then if (v82<=(24 -14)) then if ((493==493) and (v82<=(4 + 0))) then if (v82<=(701 -(271 + 429))) then if (v82==0) then local v123=v81[2];local v124=v79[v81[3]];v79[v123 + 1 + 0 ]=v124;v79[v123]=v124[v79[v81[1504 -(1408 + (379 -287)) ]]];else v79[v81[1088 -(461 + 625) ]]();end elseif (v82<=(5 -3)) then local v128=v81[2];local v129=v79[v81[1291 -(993 + 295) ]];v79[v128 + 1 + (0 -0) ]=v129;v79[v128]=v129[v81[1175 -(418 + 603 + 150) ]];elseif ((v82>3) or (2467==1987)) then v79[v81[1 + 1 ]]=v79[v81[1 + 2 ]]%v81[2 + 2 ] ;else local v216=v81[1 + 1 ];do return v79[v216](v13(v79,v216 + 1 ,v81[532 -(406 + 123) ]));end end elseif (v82<=(1776 -((6130 -4381) + 20))) then if (v82<=(2 + 3)) then local v133=v81[2];local v134,v135=v72(v79[v133](v13(v79,v133 + 1 ,v81[(3822 -2497) -(1249 + 73) ])));v74=(v135 + v133) -1 ;local v136=0;for v200=v133,v74 do v136=v136 + 1 ;v79[v200]=v134[v136];end elseif ((v82>(3 + (4 -1))) or (1205>1333)) then local v217=v81[2];local v218=v79[v217];local v219=v79[v217 + (1147 -(466 + 679)) ];if (v219>0) then if (v218>v79[v217 + (2 -1) ]) then v73=v81[8 -5 ];else v79[v217 + (1903 -(106 + 1794)) ]=v218;end elseif ((v218<v79[v217 + 1 + 0 ]) or (3696<=3327)) then v73=v81[3];else v79[v217 + 3 ]=v218;end else v79[v81[2]]=v79[v81[1 + 2 ]]%v79[v81[11 -7 ]] ;end elseif ((v82<=8) or (4542==2970)) then for v203=v81[5 -3 ],v81[117 -(4 + 110) ] do v79[v203]=nil;end elseif (v82==(593 -(57 + 527))) then v79[v81[1429 -(41 + 1386) ]]=v62[v81[106 -(17 + 86) ]];else v73=v81[3 + 0 ];end elseif ((252<=1977) and (v82<=(33 -18))) then if ((v82<=(34 -(67 -45))) or (1436==3775)) then if (v82==(177 -(122 + 44))) then local v137=v81[2 -0 ];local v138={};for v205=1, #v78 do local v206=0 -(1248 -(111 + 1137)) ;local v207;while true do if ((v206==0) or (1618<930)) then v207=v78[v205];for v394=0, #v207 do local v395=v207[v394];local v396=v395[1];local v397=v395[160 -(91 + 67) ];if ((v396==v79) and (v397>=v137)) then local v437=0 + 0 ;while true do if ((4723>4153) and (v437==((0 -0) + 0))) then v138[v397]=v396[v397];v395[1 -0 ]=v138;break;end end end end break;end end end elseif v79[v81[67 -(30 + 35) ]] then v73=v73 + 1 + 0 ;else v73=v81[1260 -(1043 + 214) ];end elseif (v82<=13) then if (v79[v81[2]]==v79[v81[15 -11 ]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>(1226 -(323 + 889))) then local v226=v81[5 -3 ];v79[v226]=v79[v226](v13(v79,v226 + (581 -(91 + 270 + 219)) ,v74));else v79[v81[322 -(53 + 267) ]]=v79[v81[3]]%v81[1 + 3 ] ;end elseif (v82<=18) then if (v82<=(429 -(15 + 398))) then local v139=v81[984 -(18 + 964) ];v79[v139](v79[v139 + 1 ]);elseif (v82==(63 -46)) then local v229=0 + 0 ;local v230;local v231;local v232;while true do if (v229==(1 + 0)) then v232={};v231=v10({},{__index=function(v414,v415) local v416=v232[v415];return v416[851 -(20 + 830) ][v416[2 + 0 ]];end,__newindex=function(v417,v418,v419) local v420=v232[v418];v420[127 -(116 + 10) ][v420[1 + 1 ]]=v419;end});v229=740 -(542 + 196) ;end if ((v229==(0 -0)) or (3654>=4654)) then v230=v70[v81[1 + 2 ]];v231=nil;v229=1 + 0 + 0 ;end if (v229==(1 + 1)) then for v422=2 -1 ,v81[9 -5 ] do v73=v73 + ((2323 -(326 + 445)) -(1126 + 425)) ;local v423=v69[v73];if (v423[406 -(118 + 287) ]==69) then v232[v422-(3 -2) ]={v79,v423[8 -5 ]};else v232[v422-(378 -(142 + 235)) ]={v61,v423[1 + 2 ]};end v78[ #v78 + 1 ]=v232;end v79[v81[979 -(553 + 424) ]]=v29(v230,v231,v62);break;end end else v79[v81[(6 -3) -(712 -(530 + 181)) ]][v81[3 + 0 ]]=v79[v81[4]];end elseif (v82<=(900 -(614 + 267))) then v79[v81[2 + (32 -(19 + 13)) ]][v79[v81[2 + 1 ]]]=v81[(2 -0) + 2 ];elseif (v82>20) then v79[v81[2 + 0 ]]=v79[v81[6 -3 ]][v81[11 -7 ]];else local v237=v81[4 -2 ];local v238=v79[v237];local v239=v81[3];for v330=1 + (0 -0) ,v239 do v238[v330]=v79[v237 + v330 ];end end elseif (v82<=(154 -122)) then if ((951<=1496) and (v82<=((2225 -1446) -(239 + 514)))) then if ((v82<=(3 + 6 + 14)) or (1736==571)) then if ((v82>22) or (896>4769)) then v79[v81[1331 -(797 + 532) ]]=v81[3];else do return;end end elseif (v82<=(18 + 6)) then local v144=0 + 0 ;local v145;while true do if (v144==0) then v145=v81[4 -2 ];v79[v145](v13(v79,v145 + (1203 -(373 + 829)) ,v81[734 -(476 + 255) ]));break;end end elseif (v82==(1155 -(369 + 761))) then local v240=0;local v241;while true do if ((v240==((0 -0) + 0)) or (1045<=1020)) then v241=v81[2 -0 ];v79[v241]=v79[v241](v13(v79,v241 + (1 -(0 -0)) ,v81[241 -(64 + 174) ]));break;end end else local v242=v81[2];local v243=v79[v242 + 1 + 1 ];local v244=v79[v242] + v243 ;v79[v242]=v244;if (v243>((1812 -(1293 + 519)) -0)) then if (v244<=v79[v242 + (337 -(144 + 192)) ]) then v73=v81[219 -(42 + 174) ];v79[v242 + 3 ]=v244;end elseif ((v244>=v79[v242 + 1 + 0 ]) or (1160<=328)) then v73=v81[3 + 0 ];v79[v242 + 2 + 1 ]=v244;end end elseif ((3808>2924) and (v82<=(1533 -(363 + 1141)))) then if (v82<=(1607 -(1183 + (809 -412)))) then if (v79[v81[5 -3 ]]==v81[3 + 1 ]) then v73=v73 + 1 ;else v73=v81[3 + 0 ];end elseif (v82>(2003 -(1913 + 62))) then local v247=v81[2 + 0 ];local v248=v79[v247];for v334=v247 + (2 -1) ,v81[(5054 -3118) -(565 + 1368) ] do v7(v248,v79[v334]);end else v79[v81[7 -5 ]]();end elseif ((3891<4919) and (v82<=(1691 -(1477 + (351 -167))))) then v79[v81[2 -0 ]]={};elseif (v82>(29 + 2)) then v79[v81[858 -((2431 -1867) + 292) ]]=v79[v81[4 -1 ]][v79[v81[4]]];else v79[v81[5 -3 ]]= #v79[v81[307 -(244 + (141 -81)) ]];end elseif (v82<=(30 + 8)) then if (v82<=(511 -(41 + 435))) then if ((v82<=(1034 -(497 + 441 + 63))) or (2234<=1502)) then v79[v81[2]]=v81[3 + 0 ] + v79[v81[4]] ;elseif (v82==(1159 -(936 + 189))) then local v252=0 + 0 ;local v253;while true do if (v252==(1613 -(1565 + 48))) then v253=v81[2 + 0 + 0 ];v79[v253](v13(v79,v253 + (1139 -(782 + 356)) ,v74));break;end end else v79[v81[269 -(176 + 91) ]]=v79[v81[7 -4 ]]%v79[v81[5 -1 ]] ;end elseif (v82<=(1128 -(975 + 117))) then v79[v81[1877 -((364 -207) + 1718) ]]=v29(v70[v81[3]],nil,v62);elseif (v82==37) then local v255=v81[1 + 1 ];local v256={v79[v255](v79[v255 + (3 -2) ])};local v257=0 -0 ;for v335=v255,v81[1022 -(697 + 107 + 214) ] do v257=v257 + (2 -1) ;v79[v335]=v256[v257];end elseif  not v79[v81[3 -1 ]] then v73=v73 + 1 ;else v73=v81[6 -3 ];end elseif ((v82<=41) or (2512<432)) then if (v82<=39) then v79[v81[1 + 1 ]]=v79[v81[5 -2 ]] + v81[10 -(4 + 2) ] ;elseif (v82==(1267 -(322 + (2001 -(709 + 387))))) then v79[v81[613 -(602 + 9) ]]=v79[v81[1192 -(449 + 740) ]];else v79[v81[874 -(826 + 46) ]]=v61[v81[950 -(245 + 702) ]];end elseif ((v82<=(132 -90)) or (1848==865)) then v79[v81[2]]={};elseif ((v82==((1872 -(673 + 1185)) + (83 -54))) or (4682<=4541)) then v79[v81[(6101 -4201) -(260 + 1638) ]]=v81[443 -(382 + 58) ]~=(0 -0) ;else local v263=v81[2];v79[v263]=v79[v263]();end elseif (v82<=(56 + 11)) then if (v82<=(113 -(95 -37))) then if ((v82<=49) or (3026>=4046)) then if ((2008>638) and (v82<=46)) then if ((1775<=3233) and (v82==(133 -88))) then local v151=v81[2];local v152=v79[v81[3]];v79[v151 + (1206 -(902 + 303)) ]=v152;v79[v151]=v152[v81[(6 + 2) -4 ]];else local v156=0 -0 ;local v157;while true do if (v156==(0 + 0)) then v157=v81[1692 -(1121 + 569) ];do return v13(v79,v157,v74);end break;end end end elseif ((v82<=(261 -(22 + 192))) or (4543==1997)) then local v158=683 -(483 + 200) ;local v159;while true do if ((v158==((1094 + 369) -(1404 + 59))) or (3102<728)) then v159=v81[5 -3 ];v79[v159]=v79[v159](v13(v79,v159 + (1 -0) ,v74));break;end end elseif (v82>(813 -(468 + 297))) then local v265=v81[(761 -197) -(83 + 251 + 228) ];local v266,v267=v72(v79[v265](v13(v79,v265 + (3 -2) ,v74)));v74=(v267 + v265) -(2 -1) ;local v268=0;for v341=v265,v74 do v268=v268 + (1 -(0 -0)) ;v79[v341]=v266[v268];end else local v269=v81[(1 -0) + 1 ];v79[v269]=v79[v269]();end elseif (v82<=(288 -(141 + 95))) then if (v82<=50) then v79[v81[2]]=v79[v81[3 + 0 ]][v81[4]];elseif (v82==(131 -(1960 -(446 + 1434)))) then do return;end else local v271=0 -0 ;local v272;while true do if (v271==((1283 -(1040 + 243)) + 0)) then v272=v81[5 -3 ];do return v79[v272](v13(v79,v272 + 1 ,v81[8 -5 ]));end break;end end end elseif ((345==345) and (v82<=53)) then local v162=v81[(1849 -(559 + 1288)) + 0 ];local v163=v79[v162 + (1933 -(609 + 1322)) ];local v164=v79[v162] + v163 ;v79[v162]=v164;if (v163>(454 -(13 + 441))) then if ((v164<=v79[v162 + 1 ]) or (2827<378)) then v73=v81[2 + 1 ];v79[v162 + ((14 -10) -1) ]=v164;end elseif (v164>=v79[v162 + 1 + 0 ]) then local v384=0;while true do if (v384==0) then v73=v81[166 -(92 + 71) ];v79[v162 + (5 -3) + 1 ]=v164;break;end end end elseif (v82>54) then v79[v81[2 -0 ]]=v29(v70[v81[3]],nil,v62);else v73=v81[768 -(574 + 191) ];end elseif (v82<=61) then if ((v82<=((239 -191) + 10)) or (3476<2597)) then if (v82<=56) then if (v79[v81[1 + 1 ]]==v81[9 -5 ]) then v73=v73 + 1 + 0 ;else v73=v81[(3094 -2242) -(254 + 595) ];end elseif (v82>(183 -(55 + 71))) then v79[v81[2]]=v81[3 -0 ];else for v344=v81[1792 -(573 + 1217) ],v81[8 -5 ] do v79[v344]=nil;end end elseif (v82<=59) then v79[v81[2]][v79[v81[1 + 1 + 1 ]]]=v79[v81[5 -1 ]];elseif ((3079<4794) and (v82==(999 -(714 + 225)))) then local v278=v81[5 -3 ];local v279={v79[v278](v79[v278 + 1 ])};local v280=0 + 0 ;for v346=v278,v81[(3 + 2) -1 ] do v280=v280 + (807 -(118 + 688)) ;v79[v346]=v279[v280];end else local v281=v70[v81[51 -(25 + 23) ]];local v282;local v283={};v282=v10({},{__index=function(v349,v350) local v351=v283[v350];return v351[1 + 0 ][v351[1888 -(927 + 959) ]];end,__newindex=function(v352,v353,v354) local v355=v283[v353];v355[3 -2 ][v355[734 -(16 + 716) ]]=v354;end});for v357=1 -0 ,v81[101 -(11 + 86) ] do v73=v73 + (2 -1) ;local v358=v69[v73];if (v358[286 -(175 + (326 -216)) ]==(173 -(57 + 47))) then v283[v357-(4 -(4 -1)) ]={v79,v358[8 -5 ]};else v283[v357-1 ]={v61,v358[3 + 0 ]};end v78[ #v78 + 1 + 0 ]=v283;end v79[v81[2 + 0 ]]=v29(v281,v282,v62);end elseif ((4854>4464) and (v82<=(597 -(43 + 490)))) then if ((v82<=(795 -(711 + 22))) or (4912==3758)) then local v168=v81[7 -5 ];local v169,v170=v72(v79[v168](v13(v79,v168 + (860 -(240 + 619)) ,v74)));v74=(v170 + v168) -(1 + 0) ;local v171=0 -0 ;for v208=v168,v74 do local v209=0;while true do if (v209==0) then v171=v171 + 1 + 0 ;v79[v208]=v169[v171];break;end end end elseif (v82>(1807 -(1344 + 400))) then if ((126<=3482) and  not v79[v81[407 -(142 + 113 + 150) ]]) then v73=v73 + 1 + 0 ;else v73=v81[2 + 1 ];end else v79[v81[8 -6 ]]= #v79[v81[9 -(5 + 1) ]];end elseif (v82<=(1804 -(404 + 1121 + 214))) then local v172=406 -(183 + 223) ;local v173;local v174;while true do if (v172==(0 -0)) then v173=v81[2 + 0 ];v174=v79[v81[2 + 1 ]];v172=338 -(10 + 327) ;end if (v172==(1 + 0 + 0)) then v79[v173 + (339 -(118 + 220)) ]=v174;v79[v173]=v174[v79[v81[2 + 2 ]]];break;end end elseif (v82==(515 -(108 + 341))) then local v286=v81[2];local v287,v288=v72(v79[v286](v79[v286 + 1 + 0 ]));v74=(v288 + v286) -1 ;local v289=0 -0 ;for v365=v286,v74 do local v366=1493 -(711 + 782) ;while true do if (v366==(0 -0)) then v289=v289 + (434 -(153 + 280)) ;v79[v365]=v287[v289];break;end end end else local v290=v81[471 -(270 + 199) ];v79[v290](v79[v290 + 1 ]);end elseif (v82<=(26 + 52)) then if (v82<=(1891 -(580 + 1239))) then if (v82<=(204 -135)) then if (v82==(66 + 2)) then local v175=0 -0 ;local v176;while true do if ((v175==0) or (2374==4374)) then v176=v81[1 + 1 ];v79[v176](v13(v79,v176 + 1 + 0 ,v81[7 -4 ]));break;end end else v79[v81[2 + 0 ]]=v79[v81[1170 -(645 + 522) ]];end elseif ((1575==1575) and (v82<=(1860 -(1010 + 780)))) then if (v79[v81[2 + 0 ]]==v79[v81[4]]) then v73=v73 + ((4 + 0) -3) ;else v73=v81[3];end elseif ((v82==(208 -137)) or (2234==1455)) then v79[v81[1838 -(1045 + 313 + 478) ]]=v81[7 -4 ] + v79[v81[5 -(1 + 0) ]] ;else v79[v81[507 -(351 + 154) ]]=v62[v81[1577 -(1281 + 293) ]];end elseif (v82<=(341 -(28 + 238))) then if (v82<=(162 -89)) then v79[v81[(1417 + 144) -(1381 + 178) ]]=v79[v81[3 + 0 ]][v79[v81[4 + 0 ]]];elseif (v82==(32 + 42)) then v79[v81[6 -4 ]]=v81[3]~=(0 + 0 + 0) ;else local v296=v81[472 -(381 + 89) ];local v297=v79[v296];local v298=v81[3];for v368=1 + 0 ,v298 do v297[v368]=v79[v296 + v368 ];end end elseif (v82<=76) then local v181=0;local v182;local v183;local v184;while true do if ((v181==(1 + 0)) or (1067>1779)) then v184=v79[v182 + (2 -0) ];if ((2161>=934) and (v184>0)) then if ((1612==1612) and (v183>v79[v182 + (1157 -(1074 + 82)) ])) then v73=v81[6 -(4 -1) ];else v79[v182 + (1787 -(214 + 1570)) ]=v183;end elseif (v183<v79[v182 + (1456 -(990 + 465)) ]) then v73=v81[2 + 1 ];else v79[v182 + 3 ]=v183;end break;end if (v181==(0 + 0)) then v182=v81[2 + 0 ];v183=v79[v182];v181=3 -(2 + 0) ;end end elseif (v82>(1803 -(1668 + (725 -(89 + 578))))) then v79[v81[628 -(512 + 114) ]][v81[7 -4 ]]=v79[v81[8 -4 ]];else local v301=v81[6 -4 ];v79[v301]=v79[v301](v13(v79,v301 + 1 ,v81[2 + 1 ]));end elseif (v82<=(16 + 68)) then if (v82<=(71 + 10)) then if (v82<=(266 -187)) then local v185=1994 -(109 + 1885) ;local v186;while true do if ((4352>=2833) and (v185==(1469 -(1269 + 200)))) then v186=v81[3 -(1 + 0) ];do return v13(v79,v186,v74);end break;end end elseif (v82==(895 -(98 + 717))) then local v303=826 -(802 + 24) ;local v304;local v305;local v306;local v307;while true do if ((v303==(0 -(0 -0))) or (3222<3073)) then v304=v81[(1051 -(572 + 477)) -(0 + 0) ];v305,v306=v72(v79[v304](v13(v79,v304 + 1 + 0 + 0 ,v81[3 + 0 ])));v303=1 + 0 ;end if (v303==(1 + 1)) then for v431=v304,v74 do v307=v307 + (2 -1) ;v79[v431]=v305[v307];end break;end if ((744<=2942) and (((1 + 2) -2)==v303)) then v74=(v306 + v304) -1 ;v307=0 + 0 ;v303=1 + 1 ;end end elseif v79[v81[2 + 0 ]] then v73=v73 + 1 + 0 ;else v73=v81[3];end elseif (v82<=(39 + 43)) then local v187=v81[2];local v188=v81[1437 -(797 + 636) ];local v189=v187 + (9 -7) ;local v190={v79[v187](v79[v187 + 1 + 0 ],v79[v189])};for v210=2 -1 ,v188 do v79[v189 + v210 ]=v190[v210];end local v191=v190[1 + 0 ];if v191 then v79[v189]=v191;v73=v81[2 + 1 ];else v73=v73 + (327 -(192 + 134)) ;end elseif (v82==83) then local v310=1276 -(316 + (1046 -(84 + 2))) ;local v311;local v312;local v313;local v314;while true do if ((v310==(0 + 0)) or (1833<=1322)) then v311=v81[2 + 0 ];v312,v313=v72(v79[v311](v79[v311 + 1 + 0 ]));v310=3 -2 ;end if (v310==(553 -(83 + 468))) then for v434=v311,v74 do local v435=1806 -(1202 + 604) ;while true do if (((0 -0)==v435) or (3467<=1055)) then v314=v314 + (1 -0) ;v79[v434]=v312[v314];break;end end end break;end if (v310==(2 -1)) then v74=(v313 + v311) -1 ;v314=0;v310=327 -(45 + 280) ;end end else v79[v81[2 + (0 -0) ]][v79[v81[3 + 0 ]]]=v79[v81[2 + 2 ]];end elseif ((3541==3541) and (v82<=(49 + 38))) then if ((v82<=(15 + 70)) or (3557>=4003)) then v79[v81[2]]=v79[v81[5 -2 ]] + v81[1915 -(340 + 1571) ] ;elseif (v82==(34 + 38 + 14)) then v79[v81[1774 -(1733 + 39) ]][v79[v81[3]]]=v81[10 -6 ];else v79[v81[2]]=v61[v81[3]];end elseif (v82<=(1122 -(125 + 909))) then local v193=v81[1950 -(1096 + 852) ];v79[v193](v13(v79,v193 + 1 + 0 ,v74));elseif (v82>89) then local v321=v81[2 -0 ];local v322={};for v375=1 + 0 , #v78 do local v376=v78[v375];for v389=(1354 -(497 + 345)) -(409 + 103) , #v376 do local v390=v376[v389];local v391=v390[237 -(46 + 190) ];local v392=v390[2];if ((v391==v79) and (v392>=v321)) then local v436=0;while true do if (v436==(95 -(51 + 44))) then v322[v392]=v391[v392];v390[1 + 0 ]=v322;break;end end end end end else local v323=v81[1319 -(1114 + 203) ];local v324=v81[730 -(228 + 498) ];local v325=v323 + 1 + 1 ;local v326={v79[v323](v79[v323 + 1 + 0 ],v79[v325])};for v377=1,v324 do v79[v325 + v377 ]=v326[v377];end local v327=v326[664 -(174 + 83 + 406) ];if v327 then local v393=0 -0 ;while true do if (v393==0) then v79[v325]=v327;v73=v81[1908 -(830 + (2408 -(605 + 728))) ];break;end end else v73=v73 + (525 -(303 + 221)) ;end end v73=v73 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vleft)
